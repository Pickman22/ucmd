!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
Arg	cmd.h	/^typedef struct Arg {$/;"	s
ArgDesc	cmd.h	/^typedef struct ArgDesc {$/;"	s
ArgDesc_s	cmd.h	/^} ArgDesc_s;$/;"	t	typeref:struct:ArgDesc
ArgType	cmd.h	/^typedef enum ArgType {$/;"	g
ArgType_e	cmd.h	/^} ArgType_e;$/;"	t	typeref:enum:ArgType
Arg_s	cmd.h	/^} Arg_s;$/;"	t	typeref:struct:Arg
CHAR_SPACE	cmd.c	/^#define CHAR_SPACE /;"	d	file:
CMD_ARG	cmd.h	/^#define CMD_ARG(/;"	d
CMD_ARG_BYTES_MAX_SIZE	cmd.h	/^#define CMD_ARG_BYTES_MAX_SIZE /;"	d
CMD_ARG_IS_VALID	cmd.h	/^#define CMD_ARG_IS_VALID(/;"	d
CMD_ARG_MAX_SIZE	cmd.h	/^#define CMD_ARG_MAX_SIZE /;"	d
CMD_ARG_NONE	cmd.h	/^#define CMD_ARG_NONE /;"	d
CMD_ARG_USER_NONE	cmd.h	/^#define CMD_ARG_USER_NONE /;"	d
CMD_DATA_TYPE_BYTES_MAX_SIZE	cmd.h	/^#define CMD_DATA_TYPE_BYTES_MAX_SIZE /;"	d
CMD_FP_TABLE_MAX_SIZE	cmd.h	/^#define CMD_FP_TABLE_MAX_SIZE /;"	d
CMD_H	cmd.h	/^#define CMD_H$/;"	d
CMD_NAME_MAX_SIZE	cmd.h	/^#define CMD_NAME_MAX_SIZE /;"	d
CMD_RAW_STR_MAX_SIZE	cmd.h	/^#define CMD_RAW_STR_MAX_SIZE /;"	d
CMD_TABLE_MAX_SIZE	cmd.h	/^#define CMD_TABLE_MAX_SIZE /;"	d
CallbackPtr_t	cmd.h	/^typedef Callback_t* CallbackPtr_t;$/;"	t	typeref:typename:Callback_t *
CmdHandle	cmd.h	/^typedef struct CmdHandle {$/;"	s
CmdHandle_s	cmd.h	/^} CmdHandle_s;$/;"	t	typeref:struct:CmdHandle
CmdInfo	cmd.h	/^typedef struct CmdInfo {$/;"	s
CmdInfo_s	cmd.h	/^} CmdInfo_s;$/;"	t	typeref:struct:CmdInfo
CmdTable	cmd.h	/^typedef struct CmdTable {$/;"	s
CmdTable_s	cmd.h	/^} CmdTable_s;$/;"	t	typeref:struct:CmdTable
Cmd_InitTable	cmd.c	/^ErrCode_e Cmd_InitTable(const CmdInfo_s* cmdtable, size_t table_sz) {$/;"	f	typeref:typename:ErrCode_e
Cmd_Run	cmd.c	/^ErrCode_e Cmd_Run(const char* cmdstr) {$/;"	f	typeref:typename:ErrCode_e
ERR_H	err.h	/^#define ERR_H$/;"	d
E_ARG_I16	cmd.h	/^	E_ARG_I16,$/;"	e	enum:ArgType
E_ARG_I32	cmd.h	/^	E_ARG_I32,$/;"	e	enum:ArgType
E_ARG_I8	cmd.h	/^	E_ARG_I8,$/;"	e	enum:ArgType
E_ARG_INV_TYPE	cmd.h	/^	E_ARG_INV_TYPE = 255,$/;"	e	enum:ArgType
E_ARG_NONE_TYPE	cmd.h	/^        E_ARG_NONE_TYPE = 254,$/;"	e	enum:ArgType
E_ARG_STR	cmd.h	/^	E_ARG_STR,$/;"	e	enum:ArgType
E_ARG_U16	cmd.h	/^	E_ARG_U16,$/;"	e	enum:ArgType
E_ARG_U32	cmd.h	/^	E_ARG_U32,$/;"	e	enum:ArgType
E_ARG_U8	cmd.h	/^	E_ARG_U8 = 0,$/;"	e	enum:ArgType
E_GENERIC	err.h	/^	E_GENERIC,$/;"	e	enum:ErrCode
E_INTERNAL	err.h	/^	E_INTERNAL,$/;"	e	enum:ErrCode
E_INV_ARG	err.h	/^	E_INV_ARG,$/;"	e	enum:ErrCode
E_INV_SIZE	err.h	/^	E_INV_SIZE,$/;"	e	enum:ErrCode
E_LAST_ELEM	err.h	/^	E_LAST_ELEM,$/;"	e	enum:ErrCode
E_NOT_FOUND	err.h	/^	E_NOT_FOUND,$/;"	e	enum:ErrCode
E_NOT_IMPLEMENTED	err.h	/^	E_NOT_IMPLEMENTED,$/;"	e	enum:ErrCode
E_NOT_INITIALIZED	err.h	/^   E_NOT_INITIALIZED,$/;"	e	enum:ErrCode
E_NULL_PTR	err.h	/^	E_NULL_PTR,$/;"	e	enum:ErrCode
E_OK	err.h	/^	E_OK = 0,$/;"	e	enum:ErrCode
E_OUT_OF_RANGE	err.h	/^	E_OUT_OF_RANGE,$/;"	e	enum:ErrCode
E_TOO_LARGE	err.h	/^	E_TOO_LARGE,$/;"	e	enum:ErrCode
E_TOO_SMALL	err.h	/^	E_TOO_SMALL,$/;"	e	enum:ErrCode
ErrCode	err.h	/^typedef enum ErrCode {$/;"	g
ErrCode_e	err.h	/^}  ErrCode_e;$/;"	t	typeref:enum:ErrCode
LAST_ARR_ELEM	cmd.c	/^#define LAST_ARR_ELEM /;"	d	file:
MODUDLE_NAME	test_utils.c	/^#define MODUDLE_NAME /;"	d	file:
MyAppData	test_cmd.c	/^struct MyAppData {$/;"	s	file:
STATIC	cmd.c	/^#define STATIC /;"	d	file:
UTILS_CHAR_NINE	utils.c	/^#define UTILS_CHAR_NINE /;"	d	file:
UTILS_CHAR_ZERO	utils.c	/^#define UTILS_CHAR_ZERO /;"	d	file:
UTILS_H	utils.h	/^#define UTILS_H$/;"	d
UTILS_RAW_STR_MAX_SIZE	utils.c	/^#define UTILS_RAW_STR_MAX_SIZE /;"	d	file:
UTILS_RAW_STR_U32_DATA_MAX_SIZE	utils.c	/^#define UTILS_RAW_STR_U32_DATA_MAX_SIZE /;"	d	file:
UTILS_STR_MAX_I32	utils.c	/^#define UTILS_STR_MAX_I32 /;"	d	file:
UTILS_STR_MAX_U32	utils.c	/^#define UTILS_STR_MAX_U32 /;"	d	file:
UTILS_STR_MIN_I32	utils.c	/^#define UTILS_STR_MIN_I32 /;"	d	file:
WrdBrkCh_c	cmd.c	/^const char WrdBrkCh_c = CHAR_SPACE;$/;"	v	typeref:typename:const char
_BUFOP_FROM	utils.c	/^#define _BUFOP_FROM /;"	d	file:
_BUFOP_TO	utils.c	/^#define _BUFOP_TO /;"	d	file:
_bufop	utils.c	/^static ErrCode_e _bufop(uint8_t* buf, size_t bufsz, void* data, size_t datasz, uint8_t toorfrom)/;"	f	typeref:typename:ErrCode_e	file:
_cmdtable_p_s	cmd.c	/^STATIC CmdTable_s _cmdtable_p_s = {0};$/;"	v	typeref:typename:STATIC CmdTable_s
_err_str_a	err.c	/^const char _err_str_a[][32] = {$/;"	v	typeref:typename:const char[][32]
_get_arg	cmd.c	/^STATIC ErrCode_e _get_arg(const char* rawstr, const ArgDesc_s* argdesc_a, Arg_s* arg) {$/;"	f	typeref:typename:STATIC ErrCode_e
_get_cmdinfo	cmd.c	/^STATIC ErrCode_e _get_cmdinfo(const char* cmdstr, const CmdTable_s * cmd_table, const CmdInfo_s*/;"	f	typeref:typename:STATIC ErrCode_e
_get_param	cmd.c	/^STATIC ErrCode_e _get_param(const char* rawstr, char* param, uint8_t* done) {$/;"	f	typeref:typename:STATIC ErrCode_e
_parse_string	cmd.c	/^STATIC ErrCode_e _parse_string(const char* rawstr, const CmdTable_s* table_sa, CmdHandle_s* hand/;"	f	typeref:typename:STATIC ErrCode_e
_strtoi16	cmd.c	/^ErrCode_e _strtoi16(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
_strtoi32	cmd.c	/^ErrCode_e _strtoi32(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
_strtoi8	cmd.c	/^ErrCode_e _strtoi8(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
_strtonum	cmd.c	/^typedef struct _strtonum {$/;"	s	file:
_strtonum_fp	cmd.c	/^	_strtonum_t** _strtonum_fp;$/;"	m	struct:_strtonum	typeref:typename:_strtonum_t **	file:
_strtonum_fp	cmd.c	/^static _strtonum_t* _strtonum_fp[] = {$/;"	v	typeref:typename:_strtonum_t * []	file:
_strtonum_h	cmd.c	/^static _strtonum_s _strtonum_h = {$/;"	v	typeref:typename:_strtonum_s	file:
_strtonum_s	cmd.c	/^} _strtonum_s;$/;"	t	typeref:struct:_strtonum	file:
_strtou16	cmd.c	/^ErrCode_e _strtou16(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
_strtou32	cmd.c	/^ErrCode_e _strtou32(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
_strtou8	cmd.c	/^ErrCode_e _strtou8(const char* rawstr, void* buf) {$/;"	f	typeref:typename:ErrCode_e
a	test_cmd.c	/^   uint8_t a;$/;"	m	struct:MyAppData	typeref:typename:uint8_t	file:
appdata	test_cmd.c	/^struct MyAppData appdata = { 1, 2, 3 };$/;"	v	typeref:struct:MyAppData
argdesc	cmd.h	/^	const ArgDesc_s argdesc[CMD_ARG_MAX_SIZE];$/;"	m	struct:CmdInfo	typeref:typename:const ArgDesc_s[]
argname	cmd.h	/^	char argname;$/;"	m	struct:ArgDesc	typeref:typename:char
args	cmd.h	/^   Arg_s args[CMD_ARG_MAX_SIZE];$/;"	m	struct:CmdHandle	typeref:typename:Arg_s[]
argtype	cmd.h	/^	ArgType_e argtype;$/;"	m	struct:ArgDesc	typeref:typename:ArgType_e
assert	utils.c	/^#define assert(/;"	d	file:
b	test_cmd.c	/^   int16_t b;$/;"	m	struct:MyAppData	typeref:typename:int16_t	file:
buf	cmd.c	/^typedef ErrCode_e _strtonum_t(const char* rawstr, void* buf);$/;"	t	typeref:typename:ErrCode_e _strtonum_t (const char * rawstr,void *)	file:
c	test_cmd.c	/^   int32_t c;$/;"	m	struct:MyAppData	typeref:typename:int32_t	file:
callback	cmd.h	/^   CallbackPtr_t callback;$/;"	m	struct:CmdHandle	typeref:typename:CallbackPtr_t
cmd_1	test_cmd.c	/^ErrCode_e cmd_1(Arg_s* args, void* usrargs) {$/;"	f	typeref:typename:ErrCode_e
cmdname	cmd.h	/^	const char cmdname[CMD_NAME_MAX_SIZE];$/;"	m	struct:CmdInfo	typeref:typename:const char[]
ctrlmode_handle	test_cmd.c	/^ErrCode_e ctrlmode_handle(Arg_s* args, void* usrargs) {$/;"	f	typeref:typename:ErrCode_e
data	cmd.h	/^	uint8_t data[CMD_ARG_BYTES_MAX_SIZE];$/;"	m	struct:Arg	typeref:typename:uint8_t[]
desc	cmd.h	/^	const ArgDesc_s* desc;$/;"	m	struct:Arg	typeref:typename:const ArgDesc_s *
dummy_handle	test_cmd.c	/^ErrCode_e dummy_handle(Arg_s* args, void* usrargs) {$/;"	f	typeref:typename:ErrCode_e
findch	utils.c	/^ErrCode_e findch(const char* str, uint8_t ch, int16_t* idx) {$/;"	f	typeref:typename:ErrCode_e
frombytes	utils.c	/^ErrCode_e frombytes(uint8_t* buf, size_t bufsz, void* data, size_t datasz) {$/;"	f	typeref:typename:ErrCode_e
handle	cmd.h	/^   	const CallbackPtr_t handle;$/;"	m	struct:CmdInfo	typeref:typename:const CallbackPtr_t
info_a	cmd.h	/^	const CmdInfo_s* info_a;$/;"	m	struct:CmdTable	typeref:typename:const CmdInfo_s *
is_valid	cmd.h	/^   	uint8_t is_valid;$/;"	m	struct:Arg	typeref:typename:uint8_t
main	main.c	/^int main(void) {$/;"	f	typeref:typename:int
pid_handle	test_cmd.c	/^ErrCode_e pid_handle(Arg_s* args, void* usrargs) {$/;"	f	typeref:typename:ErrCode_e
print_err	err.c	/^void print_err(char* msg, ErrCode_e err) {$/;"	f	typeref:typename:void
pwmfreq_handle	test_cmd.c	/^ErrCode_e pwmfreq_handle(Arg_s* args, void* usrargs) {$/;"	f	typeref:typename:ErrCode_e
size	cmd.c	/^	size_t size;$/;"	m	struct:_strtonum	typeref:typename:size_t	file:
size	cmd.h	/^	size_t size;$/;"	m	struct:CmdTable	typeref:typename:size_t
strtof	utils.c	/^ErrCode_e strtof(const char* rawstr, float* data) {$/;"	f	typeref:typename:ErrCode_e
strtoi32	utils.c	/^ErrCode_e strtoi32(const char* rawstr, int32_t* data) {$/;"	f	typeref:typename:ErrCode_e
strtou32	utils.c	/^ErrCode_e strtou32(const char* rawstr, uint32_t* data) {$/;"	f	typeref:typename:ErrCode_e
test__get_arg	test_cmd.c	/^void test__get_arg(void) {$/;"	f	typeref:typename:void
test__get_cmdinfo	test_cmd.c	/^void test__get_cmdinfo(void) {$/;"	f	typeref:typename:void
test__get_param	test_cmd.c	/^void test__get_param(void) {$/;"	f	typeref:typename:void
test__parse_string	test_cmd.c	/^void test__parse_string(void) {$/;"	f	typeref:typename:void
test_cmd	test_cmd.c	/^void test_cmd(void) {$/;"	f	typeref:typename:void
test_strtoi32	test_utils.c	/^void test_strtoi32(void) {$/;"	f	typeref:typename:void
test_strtou32	test_utils.c	/^void test_strtou32(void) {$/;"	f	typeref:typename:void
test_utils_asbytes	test_utils.c	/^void test_utils_asbytes(void) {$/;"	f	typeref:typename:void
test_utils_findch	test_utils.c	/^void test_utils_findch(void) {$/;"	f	typeref:typename:void
tobytes	utils.c	/^ErrCode_e tobytes(uint8_t* buf, size_t bufsz, void* data, size_t datasz) {$/;"	f	typeref:typename:ErrCode_e
userarg	cmd.h	/^   	void* userarg;$/;"	m	struct:CmdInfo	typeref:typename:void *
userarg	cmd.h	/^   void* userarg;$/;"	m	struct:CmdHandle	typeref:typename:void *
usrargs	cmd.h	/^typedef ErrCode_e Callback_t(Arg_s* args, void* usrargs);$/;"	t	typeref:typename:ErrCode_e Callback_t (Arg_s * args,void *)
